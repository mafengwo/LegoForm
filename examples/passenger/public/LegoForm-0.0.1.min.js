/*
 * LegoForm
 * 
 *
 * Version: 0.0.1 - 2016-10-08
 * License: MIT
 */angular.module("LegoForm",["lf.tpls","lf.service.event","lf.service.form","lf.service.validation","lf.lego.checkbox","lf.lego.form","lf.lego.input","lf.lego.radio","lf.lego.select","lf.lego.submit","lf.lego.textarea"]),angular.module("lf.tpls",["lf/checkbox.html","lf/form.html","lf/input.html","lf/radio.html","lf/select.html","lf/submit.html","lf/textarea.html"]),angular.module("lf.service.event",[]).service("eventService",function(){var a={};this.on=function(b,c,d,e){a[b][c].condition=d,a[b][c].handler=e},this.trigger=function(b){angular.isFunction(a[b])&&a[b]()},this.unbind=function(b){delete a[b]}}),angular.module("lf.service.form",[]).service("formService",["validationService","$rootScope",function(a,b){function c(a){var c={};angular.forEach(a,function(a){angular.isDefined(c[a.lego_type])||(c[a.lego_type]={}),angular.isDefined(c[a.lego_type][a.lego_name])||(c[a.lego_type][a.lego_name]=[]),c[a.lego_type][a.lego_name]=a.message}),angular.forEach(c,function(a,c){b.$broadcast("lf.event.validation."+c,a)})}function d(a){var b=a.data_type.toLowerCase(),c=a.default_value;if(c)return c;switch(b){case"string":return"";case"number":return 0;case"array":return[];case"object":return{}}}var e={},f=[];this.getLegoDef=function(){return f},this.getFormData=function(){return e},this.init=function(a,b){f=a,angular.forEach(a,function(a){b.hasOwnProperty(a.name)||(b[a.name]=d(a))}),e=b},this.validate=function(){return a.validate(f,e)},this.submit=function(){var a=this.validate();a.length?c(a):b.$broadcast("lf.event.submit",e)}}]),angular.module("lf.service.validation",[]).service("validationService",function(){function a(a,b,c){var d;if(angular.isArray(b))for(d=0;d<b.length;d++)a=a.replace("{PARAM["+d+"]}",b[d]);else if(angular.isObject(b))for(d in b)b.hasOwnProperty(d)&&(a=a.replace("{PARAM."+d+"}",b[d]));else a=a.replace("{PARAM}",b);return[c.label," ",a].join("")}this.validate=function(c,d){var e,f=[];return angular.forEach(c,function(c){var g=d[c.name],h=c.data_type.toLowerCase();angular.forEach(c,function(d,i){b.hasOwnProperty(i)&&(e=b[i].method(g,d,h),e||f.push({lego_name:c.name,lego_type:c.type,message:a(b[i].message,d,c)}))})}),f};var b={data_type:{method:function(a,b){var c;if(b=b.toLowerCase(),-1!==["string","number","array","object"].indexOf(b))return c=["is",b.charAt(0).toUpperCase(),b.slice(1)].join(""),angular[c](a);throw Error("Unrecognized data_type of"+param)},message:"type should be {PARAM}"},required:{method:function(a,b,c){switch(c.toLowerCase()){case"string":return!!a.length;case"number":return!isNaN(parseFloat(a))&&isFinite(a);case"array":return!!a.length;case"object":for(var d in a)if(a.hasOwnProperty(d))return!0;return!1}},message:"is required!"},min_length:{method:function(a,b,c){return-1!==["string","array"].indexOf(c)&&angular.isNumber(+b)?a.length>=b:!0},message:"min length is {PARAM}"},max_length:{method:function(a,b,c){return-1!==["string","array"].indexOf(c)&&angular.isNumber(+b)?a.length<=b:!0},message:"max length is {PARAM}"},range:{method:function(a,b,c){return"number"===c&&angular.isArray(b)&&2===b.length&&angular.isNumber(b[0])&&angular.isNumber(b[1])&&b[0]<=b[1]?b[0]<a&&a<b[1]:void 0},message:"value range is {PARAM[0]} - {PARAM[1]}"}}}),angular.module("lf.lego.checkbox",[]).controller("CheckboxController",["$scope",function(a){function b(){if(!angular.isArray(c.$modelValue))throw TypeError("The data type of lego-checkbox must be an array.")}var c;this.init=function(a){c=a},a.$on("lf.event.validation.checkbox",function(b,c){a.validationError=c}),a.check=function(a,d){if("INPUT"!==d.target.tagName)return!1;b();var e=c.$modelValue,f=e.indexOf(a.value);-1===f?e.push(a.value):e.splice(f,1),c.$setViewValue(e)},a.isChecked=function(a){return angular.isDefined(c.$modelValue)&&-1!==c.$modelValue.indexOf(a.value)}}]).directive("legoCheckbox",function(){return{require:["legoCheckbox","ngModel"],restrict:"E",scope:{lego:"="},templateUrl:"lf/checkbox.html",controller:"CheckboxController",link:function(a,b,c,d){var e=d[0],f=d[1];e.init(f)}}}),angular.module("lf.lego.form",[]).controller("FormController",["$scope","formService",function(a,b){var c,d;this.setLegoDef=function(a){c=a,this.init()},this.setNgModel=function(a){d=a,this.init()},this.init=function(){c&&d&&b.init(c,d)}}]).directive("legoForm",function(){return{require:["legoForm","ngModel"],restrict:"E",scope:{legoDef:"=?",ngModel:"=?"},templateUrl:"lf/form.html",controller:"FormController",link:function(a,b,c,d){var e=d[0];a.$watch("legoDef",function(a){a&&angular.isArray(a)&&a.length>0&&e.setLegoDef(a)}),a.$watch("ngModel",function(a){a&&e.setNgModel(a)})}}}),angular.module("lf.lego.input",[]).controller("InputController",["$scope",function(a){var b;this.init=function(a){b=a},a.$on("lf.event.validation.input",function(b,c){a.validationError=c})}]).directive("legoInput",function(){return{require:["legoInput","ngModel"],restrict:"E",scope:{ngModel:"=",lego:"="},templateUrl:"lf/input.html",controller:"InputController",link:function(a,b,c,d){var e=d[0],f=d[1];e.init(f)}}}),angular.module("lf.lego.radio",[]).controller("RadioController",["$scope",function(a){var b;this.init=function(a){b=a},a.check=function(a,c){return"INPUT"!==c.target.tagName?!1:void b.$setViewValue(a.value)},a.isChecked=function(a){return b.$modelValue===a.value}}]).directive("legoRadio",function(){return{require:["legoRadio","ngModel"],restrict:"E",scope:{lego:"=?"},templateUrl:"lf/radio.html",controller:"RadioController",link:function(a,b,c,d){var e=d[0],f=d[1];e.init(f)}}}),angular.module("lf.lego.select",[]).controller("SelectController",["$scope",function(a){var b;this.init=function(a){b=a}}]).directive("legoSelect",function(){return{require:["legoSelect","ngModel"],restrict:"E",scope:{lego:"=",ngModel:"="},templateUrl:"lf/select.html",controller:"SelectController",link:function(a,b,c,d){var e=d[0],f=d[1];e.init(f)}}}),angular.module("lf.lego.submit",[]).controller("SubmitController",["$scope","formService",function(a,b){var c;this.init=function(a){c=a},a.submit=function(){b.submit()}}]).directive("legoSubmit",function(){return{require:["legoSubmit","ngModel"],restrict:"E",controller:"SubmitController",templateUrl:"lf/submit.html",link:function(a,b,c,d){var e=d[0],f=d[1];e.init(f)}}}),angular.module("lf.lego.textarea",[]).controller("TextareaController",["$scope","formService",function(a,b){var c;this.init=function(a){c=a}}]).directive("legoTextarea",function(){return{require:["legoTextarea","ngModel"],restrict:"E",scope:{maxLength:"=?",ngModel:"=?"},templateUrl:"lf/textarea.html",controller:"TextareaController",link:function(a,b,c,d){var e=d[0],f=d[1];e.init(f,c)}}}),angular.module("lf/checkbox.html",[]).run(["$templateCache",function(a){a.put("lf/checkbox.html",'<label ng-bind="lego.label"></label><span style="color:red" ng-bind="validationError[lego.name]"></span>\n<div class="lf-lego-checkbox">\n    <label class="item" ng-repeat="one in lego.options" ng-click="check(one, $event)">\n        <input type="checkbox" ng-checked="isChecked(one)" ng-disabled="lego.states.disabled">\n        <span class="label-text" ng-bind="one.label"></span>\n    </label>\n</div>')}]),angular.module("lf/form.html",[]).run(["$templateCache",function(a){a.put("lf/form.html",'<form class="form">\n    <div class="row">\n        <div ng-repeat="lego in legoDef" ng-hide="lego.states.hide" class="col-md-{{lego.style.width}}"\n             ng-switch="lego.type">\n            <div class="form-group">\n\n                <!-- input -->\n                <lego-input\n                        ng-switch-when="input"\n                        lego="lego"\n                        ng-model="ngModel[lego.name]"\n                ></lego-input>\n\n                <!-- radio -->\n                <lego-radio\n                        ng-switch-when="radio"\n                        lego="lego"\n                        ng-model="ngModel[lego.name]"\n                ></lego-radio>\n\n                <!-- checkbox -->\n                <lego-checkbox\n                        ng-switch-when="checkbox"\n                        lego="lego"\n                        ng-model="ngModel[lego.name]"\n                ></lego-checkbox>\n\n                <!-- select -->\n                <lego-select\n                        ng-switch-when="select"\n                        lego="lego"\n                        ng-model="ngModel[lego.name]"\n                ></lego-select>\n\n                <!-- textarea -->\n                <lego-textarea\n                        ng-switch-when="textarea"\n                        lego="lego"\n                        ng-model="ngModel[lego.name]"\n                ></lego-textarea>\n\n            </div>\n        </div>\n    </div>\n    <lego-submit ng-model="ngModel"></lego-submit>\n</form>')}]),angular.module("lf/input.html",[]).run(["$templateCache",function(a){a.put("lf/input.html",'<label ng-bind="lego.label"></label><span style="color:red" ng-bind="validationError[lego.name]"></span>\n<input type="text" ng-model="ngModel" ng-change="change()" ng-disabled="lego.states.disabled"\n       maxlength="{{maxLength}}" class="form-control">')}]),angular.module("lf/radio.html",[]).run(["$templateCache",function(a){a.put("lf/radio.html",'<label ng-bind="lego.label"></label>\n<div class="lf-lego-radio">\n    <label class="item" ng-repeat="one in lego.options" ng-click="check(one, $event)">\n        <input type="radio" ng-checked="isChecked(one)" ng-disabled="lego.states.disabled">\n        <span class="label-text" ng-bind="one.label"></span>\n    </label>\n</div>')}]),angular.module("lf/select.html",[]).run(["$templateCache",function(a){a.put("lf/select.html",'<label ng-bind="lego.label"></label>\n<select class="form-control" ng-options="o.value as o.label for o in lego.options" \n        ng-model="ngModel" ng-disabled="lego.states.disabled"></select>')}]),angular.module("lf/submit.html",[]).run(["$templateCache",function(a){a.put("lf/submit.html",'<button class="btn btn-default" ng-click="submit()">\n    Submit\n</button>')}]),angular.module("lf/textarea.html",[]).run(["$templateCache",function(a){a.put("lf/textarea.html",'<textarea ng-model="ngModel" ng-disabled="lego.states.disabled" maxlength="{{maxLength}}" class="form-control"></textarea>')}]);